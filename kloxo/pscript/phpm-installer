#!/bin/sh

if [ "$1" == "--help" ] ; then
	echo
	echo " ------------------------------------------------------------------------------"
	echo "  format: sh $0 <phpXYm|phpXYs> [--force]"
	echo " ------------------------------------------------------------------------------"
	echo "  phpXYm/phpXYs"
	echo "      - start from php52m/php52s"
	echo "      - phpXYm for 'multiple php'"
	echo "      - phpXYs for 'special php' for KloxoNG panel"
	echo "  --force"
	echo "      - for re-install"
	echo
	exit;
fi

if [ "$#" == 0 ] ; then
	echo
	echo "- For help, type '$0 --help'"
	echo
	exit
fi

base_name="${1}"

if [ "${base_name}" == "php" ] ; then
	main_path=""
else
	main_path="/opt/${base_name}"
fi

if [ "${base_name}" != "php" ] ; then
	if [ "$(grep 's' <<<${base_name})" == "" ] && [ "$(grep 'm' <<<${base_name})" == "" ] ; then
		echo "* WARNING: only for phpXYm or phpXYs (change XY to 52 - 74)"
		exit
	fi
fi

. /script/counter-start.inc

## MR -- remove last char (default m or s)
src_name="${base_name%[s,m]}"

if [ "${base_name}" == "php" ] ; then
	main_path=""
else
	main_path="/etc/opt/remi/${src_name}"
fi

if [ "${base_name}" == "php52s" ] || [ "${base_name}" == "php53s" ] || [ "${base_name}" == "php54s" ] ;  then
	if [ "$(rpm -qa ${src_name}-cli)" != "" ] ; then
		yum remove ${src_name}* -y -q >/dev/null 2>&1
		'rpm' -e ${src_name}-fpm --noscripts >/dev/null 2>&1
	fi
fi

mkdir -p ${main_path} >/dev/null 2>&1

#cd ${main_path} >/dev/null 2>&1

rm -f ${main_path}/${src_name}_install.log >/dev/null 2>&1

## MR -- use 'echo "$var"' instead 'echo $var'!!!
end_note="
Note:
- See '${main_path}/${src_name}_install.log' for detail install process
- Example: copy 'xcache.nonini' to '_xcache.ini' or 'xcache_used.ini'
           for enable 'xcache' module in '/etc/${src_name}/etc/php.d'
- For config setup only, run 'sh /script/phpm-config-setup ${src_name}
"

x="=== BEGIN '$1' install ==="
echo $x
echo $x >>${main_path}/${src_name}_install.log

if yum list ${src_name}u-cli >/dev/null 2>&1 ; then
	pack_name="${src_name}u"
elif yum list ${src_name}-cli >/dev/null 2>&1 ; then
	pack_name="${src_name}"
elif yum list ${src_name}-php-cli >/dev/null 2>&1 ; then
	pack_name="${src_name}"
elif yum list ${src_name}w-cli >/dev/null 2>&1 ; then
	pack_name="${src_name}w"
else
	echo "- No PHP packages exists. Only detecting '${src_name}u', '${src_name}' or '${src_name}w'. Exit"
	echo
	exit
fi

if [ "$(uname -m)" == "x86_64" ] ; then
	v=".x86_64"
else
	v=""
fi

if [ "$(rpm -qa yum-utils)" == "" ] ; then
	yum install yum-utils -y
fi

if [ -f ${main_path}/${src_name} ] ; then
	## remove from previous process
	'rm' -f ${main_path}/${src_name}
fi

pack_verrel=$(repoquery --qf='%{version}-%{release}' ${pack_name}-cli)

if [ -f ${main_path}/version ] ; then
	if [ "${2}" == "-y" ] || [ "${2}" == "--force" ] ; then
		echo "${pack_verrel}" > ${main_path}/version
	else
		cver=$(cat ${main_path}/version)

		if [ "$(rpm -qa rpmdevtools)" == "" ] ; then
			yum install rpmdevtools -y
		fi

		rpmdev-vercmp ${cver} ${pack_verrel} >/dev/null 2>&1
		status="$?"

		if [ "$?" != "12" ] ; then
			x="- '${pack_name}-${pack_verrel}' already installed"
			echo $x
			echo $x >>${main_path}/${src_name}_install.log
			. /script/counter-end.inc

			cd /
			sh /script/phpm-config-setup $base_name

			echo -e "$end_note"

			exit
		fi

		echo "${pack_verrel}" >${main_path}/version
	fi
else
	echo "${pack_verrel}" >${main_path}/version
fi

x="- Dependencies rpms... Please wait!"
echo $x
echo $x >>${main_path}/${src_name}_install.log

c=""

x="-- Check dependencies rpms"
echo $x
echo $x >>${main_path}/${src_name}_install.log

repoquery --qf='%{name}' --requires --resolve ${pack_name} ${pack_name}-*|egrep -iv '(php|mysql|postgresql|mariadb|httpd|openssl|nginx|tengine|pear1u)(.*)'|sort -u > ${main_path}/dependencies

if [ "$(yum list|grep libmemcached10)" != "" ] ; then
	libm1=$(yum info libmemcached10${v}|grep Version|awk '{print $3}')
else
	libml="0.0.0"
fi

libm2=$(yum info libmemcached${v}|grep Version|awk '{print $3}')

if [[ $libm1 < $libm2 ]] ; then
	if [ "$(rpm -qa libmemcached10)" != "" ] ; then
		yum replace libmemcached10 --replace-with=libmemcached -y >/dev/null 2>&1
	fi
	sed -i 's/libmemcached10/libmemcached/g' ${main_path}/dependencies ${main_path}/dependencies
else
	if [ "$(rpm -qa libmemcached)" != "" ] ; then
		yum replace libmemcached --replace-with=libmemcached10 -y >/dev/null 2>&1
	fi
fi

x="-- List dependencies rpms"
echo $x
echo $x >>${main_path}/${src_name}_install.log
#yum -y install $(cat ${main_path}/dependencies) --skip-broken >>${main_path}/${src_name}_install.log

x="- Intall php packages... Please wait!"
echo $x
echo $x >>${main_path}/${src_name}_install.log

if [ -f ${main_path}/etc ] ; then
	find ${main_path}/etc ! \( -name "_*.ini" -or -name "*_used.ini" \) -exec rm -rf {} \;
fi

#yumdownloader ${pack_name}-* mod_-${pack_name} -x *debuginfo* >>${main_path}/${src_name}_install.log

php_exclude="--exclude=*debuginfo* --exclude=php*-xcache* --exclude=php*-eaccelerator* --exclude=php*-pecl-zendopcache* --exclude=php*-pgsql84* --exclude=php*-opcache* --exclude=php*-fpm-httpd* --exclude=php*-fpm-nginx* --exclude=php*-pecl-sphinx*"

yum install ${pack_name} ${pack_name}-* ${php_exclude} -y --skip-broken >>${main_path}/${src_name}_install.log

#'rm' -rf *-debuginfo*

#rpmrebuild -v --change-spec-whole='sed -e "s/^Prefix:.*/Prefix: \//"' \
#	--change-spec-whole='sed -e "s/^\(.*:[ ]\+\..*\)/#ERROR \1/"' \
#	--notest-install -p -d ${main_path}/rpms-patch ${main_path}/rpms-original \
#	>>${main_path}/${src_name}_install.log
#rpm -i --dbpath /rpm force --root ${main_path} --nopre --nopost --nodeps ${main_path}/rpms-patch \
#	>>${main_path}/${src_name}_install.log


#x="- Extract all rpms to '${main_path}'"
#echo $x
#echo $x >>${main_path}/${src_name}_install.log

#for i in $(ls ./*.rpm) ; do
#	rpm2cpio $i | cpio -idmv >/dev/null 2>$1
#done

#'rm' -rf ./*.rpm

cd /
sh /script/phpm-config-setup $base_name

if [ -f ${main_path}/${src_name} ] ; then
	'rm' -f ${main_path}/${src_name}
fi

#sh /script/set-php-fpm $src_name
sh /script/enable-php-fpm

x="=== END '$1' install ==="
echo $x
echo $x >>${main_path}/${src_name}_install.log

. /script/counter-end.inc

echo -e "$end_note"
